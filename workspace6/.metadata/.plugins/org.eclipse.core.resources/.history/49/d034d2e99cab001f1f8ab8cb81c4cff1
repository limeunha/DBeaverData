-- 모든 데이터 조회
-- *: 모든 컬럼
SELECT * FROM CUSTOMER;

--특정 컬럼만 조회
SELECT NAME , ADDRESS FROM CUSTOMER;

--컬럼의 순서를 바꿔서 조회
SELECT NAME, ID, ADDRESS FROM CUSTOMER;

-- 순서대로 정렬해서 조회
SELECT * FROM CUSTOMER ORDER BY ID ASC; --오름차순 정렬
SELECT * FROM CUSTOMER ORDER BY ADDRESS;

--역정렬해서 조회
SELECT * FROM CUSTOMER ORDER BY ID DESC; --내림차순 정렬
SELECT * FROM CUSTOMER ORDER BY ADDRESS DESC;

SELECT  * FROM GIFT;

--gift 테이블에서 type 컬럼으로 그룹화(같은 컬럼값끼리 묶는다)
SELECT TYPE FROM gift GROUP BY TYPE; 

--group by 한 컬럼외에 다른 컬럼은 가져올 수 X
SELECT * FROM gift GROUP BY TYPE; 

--group by를 사용해 선물의 건수와 합계를 조회
SELECT  * FROM GIFT;
SELECT TYPE, COUNT(TYPE) AS cnt FROM GIFT GROUP BY TYPE; 
SELECT TYPE, COUNT(TYPE) AS 선물갯수 FROM GIFT GROUP BY TYPE; 

SELECT TYPE, COUNT(TYPE) cnt FROM GIFT GROUP BY TYPE;
SELECT TYPE, COUNT(TYPE) 선물갯수 FROM GIFT GROUP BY TYPE; 

-- 별칭에 공백이나 특수문자가 있을 경우 쌍따옴표 사용
SELECT TYPE, COUNT(TYPE) "선물갯수" FROM GIFT GROUP BY TYPE;


SELECT TYPE, SUM(PRICE) FROM GIFT GROUP BY TYPE; 


--where절 비교연산자
SELECT * FROM CUSTOMER WHERE ID = 1;
SELECT * FROM CUSTOMER WHERE ID > 1;
SELECT * FROM CUSTOMER WHERE ID < 4;
SELECT * FROM CUSTOMER WHERE ID >= 1;
SELECT * FROM CUSTOMER WHERE ID <= 4;
SELECT * FROM CUSTOMER WHERE ID != 1; --아이디가 1이아닌것을

--논리 연산자
SELECT * FROM CUSTOMER;


--name이 둘리이고, 주소가 서울인 데이터를 뽑아라
SELECT * FROM CUSTOMER WHERE NAME = '둘리' AND ADDRESS = '서울';

--주소가 인천이거나 서울인 데이터를 뽑아라
SELECT *FROM CUSTOMER WHERE ADDRESS = '인천' OR ADDRESS ='서울';

--주소가 서울이 아닌 데이터만 뽑아라
SELECT NAME, CUSTOMER WHERE NOT ADDRESS = '서울';

--산술 연산자(number, date타입의 컬럼에서 사용가능)
SELECT * FROM ORDERS;

SELECT ORDER_ID + (SALESMAN_ID * ORDER_ID) FROM ORDERS;
SELECT ORDER_ID / SALESMAN_ID FROM ORDERS;

--합성연산자(문자와 문자를 연결)
SELECT 'SQL' || '개발자' FROM dual; --dual은 test할때 많이 씀
SELECT '이름:' || NAME || '입니다.' AS intro FROM CUSTOMER;

--범위연산자
SELECT * FROM CUSTOMER;
SELECT * FROM CUSTOMER WHERE ID >=2 AND  ID <=4;
SELECT * FROM CUSTOMER WHERE ID BETWEEN 2 AND 4;
SELECT * FROM CUSTOMER WHERE ID NOT BETWEEN 2 AND 4;

--SELECT * FROM CUSTOMER WHERE ID =1 OR ID =2 OR ID =3;













































































