--1. 서브쿼리

--스칼라 서브쿼리
SELECT t1.STUDENT_NO,
    (SELECT t2.student_name
     FROM ACADEMY_B t2
     WHERE t2.STUDENT_NO = t1.STUDENT_NO) AS NAME
FROM ACADEMY_A t1;

--인라인 뷰
SELECT t1.STUDENT_NO, t2.student_no
FROM ACADEMY_A t1,
(SELECT STUDENT_NO, STUDENT_NAME
FROM ACADEMY_B) t2
WHERE t1.STUDENT_NO = t2.STUDENT_NO;	

--비연관 서브쿼리
SELECT *
FROM ACADEMY_A
WHERE STUDENT_NAME = (SELECT student_name
		             FROM ACADEMY_B
		             WHERE STUDENT_NO  = 1003);

SELECT student_name
FROM ACADEMY_B
WHERE STUDENT_NO  = 1003;

--연관 서브쿼리
SELECT student_no
FROM ACADEMY_A t1
WHERE STUDENT_NAME  = (SELECT t2.student_name
                       FROM ACADEMY_B t2
                       WHERE t2.STUDENT_NO = t1.STUDENT_NO);
                      

--단일행 서브쿼리(행을 하나만 반환)
SELECT *
FROM ACADEMY_A 
WHERE student_name = (SELECT STUDENT_NAME
                      FROM ACADEMY_B 
                      WHERE STUDENT_NO = 1003);


--다중행 서브쿼리(2개 이상의 행을 결과로 가져온다)
                     
--에러발생(다중행을 나타낼때는 부등호 사용불가)
SELECT *
FROM ACADEMY_A
WHERE STUDENT_NAME in (SELECT STUDENT_NAME
                      FROM ACADEMY_B
                      WHERE STUDENT_NO = 1003 OR STUDENT_NO = 1004);
                     
--다중컬럼 서브쿼리(여러개의 컬럼을 반환)
SELECT *
FROM ACADEMY_A
WHERE (STUDENT_NAME,STUDENT_NO) IN (SELECT STUDENT_NAME, STUDENT_NO
                                    FROM ACADEMY_B
                                    WHERE STUDENT_NO = 1003 OR STUDENT_NO = 1004);


-- 2. 뷰
                                   
-- 뷰 생성
-- 기존 테이블 이용해서 만드는 가상 테이블(논리 테이블)
-- create table 로 만드는 테이블은 실제 존재하는 물리 테이블
                
CREATE OR REPLACE VIEW ACADEMY_ALL AS
SELECT * FROM ACADEMY_A;

SELECT * FROM ACADEMY_ALL;

CREATE OR REPLACE  VIEW ACADEMY_STUDENT_NAME AS
SELECT STUDENT_NAME FROM ACADEMY_A;

--무결성 제약조건 위배
--ACADEMY_STUDENT_NAME 기본키가 없으므로 삽입시 SYUDENT_NO이 NULL이 될 가능성이 있음
--기본 테이블(ACADEMY_A)의 기본키 제약조건이 위반될 수 있음.
INSERT INTO ACADEMY_STUDENT_NAME VALUES('김하서');

INSERT INTO ACADEMY_A VALUES(1005, '김하서');
SELECT * FROM ACADEMY_STUDENT_NAME;

CREATE OR REPLACE VIEW ACADEMY_JOIN AS
SELECT T1.STUDENT_NO, T1.STUDENT_NAME
FROM ACADEMY_A T1, ACADEMY_B T2
WHERE T1.STUDENT_NO = T2.STUDENT_NO;

SELECT * FROM ACADEMY_JOIN;

--뷰삭제
DROP VIEW ACADEMY_JOIN;

--에러가 나는 뷰
CREATE OR REPLACE VIEW ACADEMY_JOIN AS
SELECT *
FROM ACADEMY_A T1, ACADEMY_B T2
WHERE T1.STUDENT_NO = T2.STUDENT_NO;










































