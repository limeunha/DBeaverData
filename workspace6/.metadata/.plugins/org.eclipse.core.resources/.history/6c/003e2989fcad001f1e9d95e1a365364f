--권한(DCL)

CREATE USER person IDENTIFIED BY person1234; --계정(스키마)생성
GRANT CONNECT, RESOURCE, DBA TO person; --권한 부여
ALTER USER person IDENTIFIED BY person5678; --비밀번호 변경
DROP USER person; --계정삭제

--트랜잭션(커밋, 롤백)

CREATE TABLE PAYMENT(
NO NUMBER PRIMARY KEY,
NAME VARCHAR2(20), --결제자 이름
PAY NUMBER --결제금액
);

--재고 테이블
CREATE TABLE STOCK(
  NO NUMBER PRIMARY KEY,
  STOCK_NAME VARCHAR2(20), -- 상품명
  STOCK_COUNT NUMBER -- 재고갯수
);


INSERT INTO STOCK VALUES(1, '티셔츠', 1);
SELECT * FROM STOCK;
SELECT * FROM PAYMENT;

--결제 상황 진행
INSERT INTO PAYMENT VALUES(1, '철수', 30000); --결제
UPDATE STOCK SET STOCK_COUNT = 0 WHERE NO = 1; --재고차감
COMMIT; --데이터 베이스에 완벽하게 반영(트랜잭션 처리 후 커밋 처리)


INSERT INTO PAYMENT VALUES(2, '미희', 30000); --결제
UPDATE STOCK SET STOCK_COUNT = 0 WHERE NO = 1; --재고차감
ROLLBACK;

DELETE INTO PAYMENT WHERE NO = 2;
UPDATE STOCK SET STOCK_COUNT = 0 WHERE NO = 1;
COMMIT;

--제약조건(CKECK)

CREATE TABLE SAMPLE(
	NO NUMBER PRIMARY KEY,
	NAME VARCHAR2(20),
	AGE NUMBER
);

INSERT INTO SAMPLE VALUES(1, '양지은', 10);
INSERT INTO SAMPLE VALUES(2, '박우진', 10);
INSERT INTO SAMPLE VALUES(3, '김태은', 10);

SELECT * FROM SAMPLE;

--10,11만 AGE의 값으로 올수 있음
ALTER TABLE SAMPLE MODIFY AGE NUMBER CHECK(AGE IN (10, 11));
INSERT INTO SAMPLE VALUES(4, '정지우', 12); --에러발생

SELECT * FROM EMP;

INSERT INTO EMP VALUES(1, '둘리', 10);
INSERT INTO EMP VALUES(2, '고길동', 10);
INSERT INTO EMP VALUES(3, '또치', 10);

--NAME컬럼에 인덱스를 건다
CREATE INDEX EMP_IDX01 ON EMP(NAME);
SELECT * FROM EMP WHERE NAME ='둘리';

--NO컬럼과 NAME 컬럼에 인덱스를 건다
--NO컬럼을 먼저 정렬하고 NAME컬럼을 정렬
CREATE INDEX EMP_IX02 ON EMP(NO, NAME);
SELECT * FROM EMP WHERE NO=1; --사용가능
SELECT * FROM EMP WHERE NO=1 AND NAME='둘리'; --사용가능
SELECT * FROM EMP WHERE NAME='둘리'; --인덱스 적용 X


--특정 컬럼에서 중복된 값이 없도록 보장
--index 기능 + unique를 통해 데이터가 중복 되지 X(무결성 보장)
-- => 중복방지, 검색속도 향상
CREATE UNIQUE INDEX EMP_UK2 ON EMP(AGE);
CREATE UNIQUE INDEX EMP_UK1 ON EMP(NO);

DROP INDEX EMP_IDX01;
DROP INDEX EMP_UK;

--데이터 사전
SELECT * FROM DBA_TABLES --DBA권한으로 볼수 있는 테이블
SELECT * FROM DBA_INDEXES  --DBA권한으로 볼수 있는 인덱스
SELECT * FROM DBA_VIEWS  --DBA권한으로 볼수 있는 VIEW

--Al(자기자신계정 + 다른계정들)
SELECT * FROM ALL_TABLES;
SELECT * FROM ALL_INDEXES;
SELECT * FROM ALL_VIEWS;

--user(자기자신계정)
SELECT * FROM USER_TABLES;
SELECT * FROM USER_INDEXES;
SELECT * FROM USER_VIEWS;

--프로시저

CREATE OR REPLACE PROCEDURE EX_PROC
(
	in_type IN VARCHAR2,
	in_name IN VARCHAR2
)
IS
	price NUMBER := 10000;
BEGIN
	INSERT INTO GIFT
	VALUES (11, in_type, in_name, price);
	COMMIT;
END EX_PROC;

SELECT * FROM GIFT;

CALL EX_PROC('가전제품', 'TV');





































