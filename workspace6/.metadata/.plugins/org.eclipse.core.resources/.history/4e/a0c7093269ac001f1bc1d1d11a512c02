
--A학원 학생 테이블
CREATE TABLE academy_a(
	student_no NUMBER PRIMARY KEY,
	student_name VARCHAR2(20) NOT NULL
);

INSERT INTO ACADEMY_A VALUES(1001, '정소화');
INSERT INTO ACADEMY_A VALUES(1002, '김용욱');
INSERT INTO ACADEMY_A VALUES(1003, '고명석');
INSERT INTO ACADEMY_A VALUES(1004, '김연아');
SELECT * FROM ACADEMY_A;

--b학원 학생 테이블
CREATE TABLE academy_b(
	student_no NUMBER PRIMARY KEY,
	student_name VARCHAR2(20) NOT NULL
);

INSERT INTO ACADEMY_B VALUES(1003, '고명석');
INSERT INTO ACADEMY_B VALUES(1004, '김연아');
INSERT INTO ACADEMY_B VALUES(1005, '김태환');
INSERT INTO ACADEMY_B VALUES(1006, '이윤아');
SELECT * FROM ACADEMY_B;

--inner 조인
SELECT * FROM ACADEMY_A t1; --SELECT t1.STUDENT_NAME, t1.STUDENT_NO FROM ACADEMY_A t1; 와 같다

SELECT * 
FROM ACADEMY_A t1
JOIN ACADEMY_B t2
ON t1.STUDENT_NO = t2.STUDENT_NO;

SELECT t1. STUDENT_NO, t1.STUDENT_NAME 
FROM ACADEMY_A t1
JOIN ACADEMY_B t2
ON t1.STUDENT_NO = t2.STUDENT_NO;

--equi 조인(inner 조인과 같은 결과를 가져온다)
SELECT * 
FROM ACADEMY_A t1, ACADEMY_B t2
WHERE t1.STUDENT_NO = t2.STUDENT_NO;

--non equi 조인
SELECT *
FROM ACADEMY_A t1, ACADEMY_B t2
WHERE t1.STUDENT_NO >= t2.STUDENT_NO;

--natural join
SELECT *
FROM ACADEMY_A t1
NATURAL JOIN ACADEMY_B t2;

--full outer join(합칩합)
SELECT *
FROM ACADEMY_A t1
FULL OUTER JOIN ACADEMY_B t2
ON (t1.STUDENT_NO = t2.STUDENT_NO)
ORDER BY t1.STUDENT_NO; --오름차순

--left join
SELECT *
FROM ACADEMY_A t1 --왼쪽 테이블
LEFT JOIN ACADEMY_B t2 --오른쪽 테이블
ON (t1.STUDENT_NO = t2.STUDENT_NO)
ORDER BY t1.STUDENT_NO;

--right join
SELECT *
FROM ACADEMY_A  t1 --왼쪽 테이블
RIGHT JOIN ACADEMY_B t2 --오른쪽 테이블
ON (t1.STUDENT_NO = t2.STUDENT_NO)
ORDER BY t1.STUDENT_NO;



SELECT * FROM EMP;
SELECT * FROM DEPT;
--퀴즈1. 부서 테이블과 직원 테이블을 조인하여 아래와 같은 결과를 출력하시오

SELECT * d.DEPT_NO , e.EMP_NAME 
FROM DEPT d
JOIN EMP e
ON (d.DEPT_NO= e.DEPT_NO);

--퀴즈2. 학생/수업/수강 테이블을 조인하여 아래와 같은 결과를 출력하시오

































